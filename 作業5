// 10727140 黃于軒 10727154 黃于珊
# include<iostream>
# include<cstdio>
# include<cstring>
# include<stdlib.h>
# include<new>
# include<iomanip>
# include<time.h>
# include<fstream>
# include<vector> 

using namespace std;

class List {
	struct Data {
		string totalData; // 一行內的所有資訊
		int gNum; // 上學年度畢業學生數  
	};
	vector<Data> collegeSet;
	
public:
	
	bool Load( string fileNum ) { // 讀檔 
		cout << endl << "Input a file number: ";
		cin >> fileNum; // 檔案編號 
		
		FILE *infile = NULL;
		
		string filename = "input" + fileNum + ".txt";
		infile = fopen( filename.c_str(), "r" );
		
		if ( infile == NULL )  // 無檔案 
			cout << endl << filename << "does not exist!" << endl;
		else { // 有檔案
			char temp[] = "temp";
			
			//讀掉前三行 
			for ( char ch = '\0'; ch != '\n' ; ch = getc(infile) );
			for ( char ch = '\0'; ch != '\n' ; ch = getc(infile) );
			for ( char ch = '\0'; ch != '\n' ; ch = getc(infile) );
			while ( ! feof( infile ) ) {
				Data tempD;
				tempD.totalData = "";
				int tempGNum;
				for ( int i = 0; i < 15; i++ ) {
					fscanf( infile, "%s", temp );
					tempD.totalData = tempD.totalData + temp;
					
					if ( i == 4 || i == 6 || i == 11 ) // 日間 /進修別, 等級別, 縣市名稱
						tempD.totalData = tempD.totalData + ' ' ;
					else if ( i != 14 ) // 一行中最後一項數據 
						tempD.totalData = tempD.totalData + '\t';
					
					if ( i == 10 ) { // 上學年度畢業生數 
						tempD.gNum = atoi( temp );
					} // if 
				} // for
				
				
				collegeSet.push_back( tempD );
			} // while
			
			
			fclose( infile );
			
			return true;
		} // else 有檔案 
		
		return false;
	} // Load()
	
	void Write( string fileNum, string sortType ) {
		string newFile = sortType + "_sort" + fileNum + ".txt";
		ofstream outfile( newFile.c_str() );
		
	} // Write()
	
	void Print() {
		int size = collegeSet.size();
		cout << size;
		for ( int i = 0; i < size ; i++ ) {
			cout << endl << collegeSet[i].totalData;
		} // for
		
	} // 
	
	void Ssort() { //選擇排序 
		
	} // Ssort()
	void Bsort () { //氣泡排序 
		
	} // Bsort()
	void Msort () { //合併排序 
		
	} // Msort()
	void Qsort () { //快速排序 
		
	} // Qsort()
};


int main() {
	int command;
	List list;
	string fileNum;
	bool haveFile;
	double START, END; 
	do {
		cout << endl << "******** Sorting Algorithms *********" ;
		cout << endl << "* 0. QUIT                           *" ;
		cout << endl << "* 1. Selection sort vs. Bubble sort *" ;
		cout << endl << "* 2. Merge sort vs. Quick sort      *" ;
		cout << endl << "*************************************" ;
		cout << endl << "Input a command(0, 1, 2): ";
		cin >> command;
		if ( command == 0 )
			break;
		else if ( command == 1 ) {
			list.Load( fileNum );
			list.Print();
//			list.Ssort(); // 選擇排序 
//			list.Bsort(); // 氣泡排序 
		} // else if 
		else if ( command == 2 ) {
			
		} // else if 
		
	} while( command != 0 );
}  // main()
